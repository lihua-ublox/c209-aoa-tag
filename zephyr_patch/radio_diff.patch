diff --git a/subsys/bluetooth/controller/ll_sw/nordic/hal/nrf5/radio/radio.c b/subsys/bluetooth/controller/ll_sw/nordic/hal/nrf5/radio/radio.c
index 2317f0da2a..a1d1145f45 100644
--- a/subsys/bluetooth/controller/ll_sw/nordic/hal/nrf5/radio/radio.c
+++ b/subsys/bluetooth/controller/ll_sw/nordic/hal/nrf5/radio/radio.c
@@ -263,6 +263,26 @@ void radio_pkt_configure(uint8_t bits_len, uint8_t max_len, uint8_t flags)
 			    (((RADIO_PCNF1_ENDIAN_Little) <<
 			      RADIO_PCNF1_ENDIAN_Pos) &
 			     RADIO_PCNF1_ENDIAN_Msk);
+
+    // Enable CTE for ADV
+    NRF_RADIO->DFEMODE = (RADIO_DFEMODE_DFEOPMODE_AoA << RADIO_DFEMODE_DFEOPMODE_Pos) & RADIO_DFEMODE_DFEOPMODE_Msk;
+
+    uint32_t reg = NRF_RADIO->CTEINLINECONF;
+    reg &= ~RADIO_CTEINLINECONF_CTEINFOINS1_Msk;
+    reg |= ((RADIO_CTEINLINECONF_CTEINFOINS1_NotInS1 << RADIO_CTEINLINECONF_CTEINFOINS1_Pos) & RADIO_CTEINLINECONF_CTEINFOINS1_Msk);
+    NRF_RADIO->CTEINLINECONF = reg;
+
+    reg = NRF_RADIO->DFECTRL1;
+    reg &= ~RADIO_DFECTRL1_NUMBEROF8US_Msk;
+    reg |= ((18 << RADIO_DFECTRL1_NUMBEROF8US_Pos)
+            & RADIO_DFECTRL1_NUMBEROF8US_Msk);
+    NRF_RADIO->DFECTRL1 = reg;
+
+    reg = NRF_RADIO->DFECTRL1;
+    reg &= ~RADIO_DFECTRL1_DFEINEXTENSION_Msk;
+    reg |= ((RADIO_DFECTRL1_DFEINEXTENSION_CRC << RADIO_DFECTRL1_DFEINEXTENSION_Pos)
+            & RADIO_DFECTRL1_DFEINEXTENSION_Msk);
+    NRF_RADIO->DFECTRL1 = reg;
 }
 
 void radio_pkt_rx_set(void *rx_packet)
@@ -371,7 +391,7 @@ static uint32_t last_pdu_end_us;
 
 uint32_t radio_is_done(void)
 {
-	if (NRF_RADIO->EVENTS_END != 0) {
+	if (NRF_RADIO->EVENTS_PHYEND != 0) {
 		/* On packet END event increment last packet end time value.
 		 * Note: this depends on the function being called exactly once
 		 * in the ISR function.
@@ -386,7 +406,7 @@ uint32_t radio_is_done(void)
 #else /* !CONFIG_BT_CTLR_SW_SWITCH_SINGLE_TIMER */
 uint32_t radio_is_done(void)
 {
-	return (NRF_RADIO->EVENTS_END != 0);
+	return (NRF_RADIO->EVENTS_PHYEND != 0);
 }
 #endif /* !CONFIG_BT_CTLR_SW_SWITCH_SINGLE_TIMER */
 
@@ -560,11 +580,11 @@ void radio_switch_complete_and_rx(uint8_t phy_rx)
 {
 #if defined(CONFIG_BT_CTLR_TIFS_HW)
 	NRF_RADIO->SHORTS = RADIO_SHORTS_READY_START_Msk |
-			    RADIO_SHORTS_END_DISABLE_Msk |
+			    RADIO_SHORTS_PHYEND_DISABLE_Msk |
 			    RADIO_SHORTS_DISABLED_RXEN_Msk;
 #else /* !CONFIG_BT_CTLR_TIFS_HW */
 	NRF_RADIO->SHORTS = RADIO_SHORTS_READY_START_Msk |
-			    RADIO_SHORTS_END_DISABLE_Msk;
+			    RADIO_SHORTS_PHYEND_DISABLE_Msk;
 	sw_switch(0, 0, 0, phy_rx, 0);
 #endif /* !CONFIG_BT_CTLR_TIFS_HW */
 }
@@ -572,21 +592,15 @@ void radio_switch_complete_and_rx(uint8_t phy_rx)
 void radio_switch_complete_and_tx(uint8_t phy_rx, uint8_t flags_rx, uint8_t phy_tx,
 				  uint8_t flags_tx)
 {
-#if defined(CONFIG_BT_CTLR_TIFS_HW)
 	NRF_RADIO->SHORTS = RADIO_SHORTS_READY_START_Msk |
-			    RADIO_SHORTS_END_DISABLE_Msk |
+			    RADIO_SHORTS_PHYEND_DISABLE_Msk |
 			    RADIO_SHORTS_DISABLED_TXEN_Msk;
-#else /* !CONFIG_BT_CTLR_TIFS_HW */
-	NRF_RADIO->SHORTS = RADIO_SHORTS_READY_START_Msk |
-			    RADIO_SHORTS_END_DISABLE_Msk;
-	sw_switch(1, phy_rx, flags_rx, phy_tx, flags_tx);
-#endif /* !CONFIG_BT_CTLR_TIFS_HW */
 }
 
 void radio_switch_complete_and_disable(void)
 {
 	NRF_RADIO->SHORTS =
-	    (RADIO_SHORTS_READY_START_Msk | RADIO_SHORTS_END_DISABLE_Msk);
+	    (RADIO_SHORTS_READY_START_Msk | RADIO_SHORTS_PHYEND_DISABLE_Msk);
 
 #if !defined(CONFIG_BT_CTLR_TIFS_HW)
 	hal_radio_sw_switch_disable();
